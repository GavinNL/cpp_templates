#!/bin/bash

GIT_REPO=https://github.com/GavinNL/cppnew
GIT_LOCAL_REPO=$HOME/.cache/cppnew

TEMPLATE_LOCATION=$HOME/Projects/cppnew/templates

TEMPLATE=$1
DIR_NAME=$2



#statements
if [ ! -d ${GIT_LOCAL_REPO} ]; then
    echo "Cloning all templates to: ${GIT_LOCAL_REPO}"
    git clone ${GIT_REPO} ${GIT_LOCAL_REPO}
fi


function list_templates() {

for f in ${TEMPLATE_LOCATION}/*; do
    if [ -f ${f}/DESCRIPTION ]; then
        # Will not run if no directories are available
        echo -e "   " $(basename ${f} suffix) '|'- $(cat ${f}/DESCRIPTION)
    fi
done

}

# Updates the repo and the shell script if needed
function update() {
    SOURCE="${BASH_SOURCE[0]}"
    while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
      DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
      SOURCE="$(readlink "$SOURCE")"
      [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
    done
    DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"


    pushd $GIT_LOCAL_REPO

    git fetch
    git pull

    popd

    exit 0
}

function template_exists()
{
    if [[ -f ${TEMPLATE_LOCATION}/$1/DESCRIPTION ]]; then
        return 0
    fi
    return 1
}


if [[ "$TEMPLATE" == "update" ]]; then
    update
fi



if [[ "$TEMPLATE" == "" || "$DIR_NAME" == "" ]]; then
    echo "Quickly create a C++ project template. Most of the templates use "
    echo "the conan package manager for handling dependencies"
    echo ""
    echo "Usage"
    echo ""
    echo "   cppnew TEMPLATE_NAME  project_folder"
    echo ""
    echo "Example: "
    echo ""
    echo "    cppnew REST_restinio myRestServer"
    echo "    mkdir -p myRestServer/build && cd myRestServer/build"
    echo "    conan install .. -s compiler.libcxx=libstdc++11"
    echo "    cmake .. && cmake --build ."
    echo ""
    echo "Templates:"
    echo ""
    list_templates  | column -t -s '|'
    echo ""
    exit 1
fi

if [ -e ${PWD}/${DIR_NAME} ]; then
    echo ${PWD}/${DIR_NAME} exists. Cannot create template
    exit 1
fi


if [[ "$TEMPLATE" == "" || "$DIR_NAME" == "" ]]; then

    list_templates

else

    if ! template_exists $TEMPLATE; then

        echo "Template, ${TEMPLATE} does not exist"

    else

        cp  -r ${TEMPLATE_LOCATION}/$1 ${DIR_NAME}
        rm  ${DIR_NAME}/DESCRIPTION
        echo ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        echo Project Created: ${DIR_NAME}
        echo ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        ( echo "cat <<EOF" ; cat ${DIR_NAME}/BUILD ; echo EOF ) | SRC_DIR=${DIR_NAME} sh
        echo ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    fi

fi
